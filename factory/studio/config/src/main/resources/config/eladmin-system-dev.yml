# 数据源配置
spring:
  redis:
    #数据库索引
    database: ${REDIS_DB:0}
    host: ${REDIS_HOST:16gmaster}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PWD:123456}
    #连接超时时间
    timeout: 5000
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms    # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接
  datasource:
    hikari:
      minimum-idle: 5 #最小空闲连接数量
      idle-timeout: 30000 #空闲连接存活最大时间，默认600000（10分钟）
      maximum-pool-size: 10 #连接池最大连接数，默认是10
      auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
      max-lifetime: 30000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
      connection-test-query: SELECT 1
      filter:
        stat:
          merge-sql=false: false

    dynamic:
      primary: mysql
      datasource:
        mysql:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://16gmaster:3306/studio?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
          username: root
          password: 123456
          # 初始连接数
          initial-size: 5
          # 最小连接数
          min-idle: 15
          # 最大连接数
          max-active: 30
          # 超时时间(以秒数为单位)
          remove-abandoned-timeout: 180
          # 获取连接超时时间
          max-wait: 3000
          # 连接有效性检测时间
          time-between-eviction-runs-millis: 60000
          # 连接在池中最小生存的时间
          min-evictable-idle-time-millis: 300000
          # 连接在池中最大生存的时间
          max-evictable-idle-time-millis: 900000
          # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
          test-while-idle: true
          # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
          test-on-borrow: true
          # 是否在归还到池中前进行检验
          test-on-return: false
          # 检测连接是否有效
          validation-query: select 1
          # 配置监控统计
          webStatFilter:
            enabled: true
          stat-view-servlet:
            enabled: true
            url-pattern: /druid/*
            reset-enable: false
          filter:
            stat:
              enabled: true
              # 记录慢SQL
              log-slow-sql: true
              slow-sql-millis: 1000
              merge-sql: true
            wall:
              config:
                multi-statement-allow: true
      filter:
        stat:
          merge-sql=false: false
  main:
    allow-bean-definition-overriding: true

  # studio DTS email
  mail:
    host: smtp.qq.com
    port: 25
    username: xxx@qq.com
    password: xxx
    #    username: ${mail.username}
    #    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
        socketFactory:
          class: javax.net.ssl.SSLSocketFactory

management:
  health:
    mail:
      enabled: false
  server:
    servlet:
      context-path: /actuator

  #mybatis-plus:
  #  # mapper.xml文件扫描
  #  mapper-locations: classpath*:/mapper/*Mapper.xml
  #  # 实体扫描，多个package用逗号或者分号分隔
  #  global-config:
  #    # 数据库相关配置
  #    db-config:
  #      # 主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
  #      id-type: AUTO
  #      # 字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
  #      field-strategy: NOT_NULL
  #      # 驼峰下划线转换
  #      column-underline: true
  #      # 逻辑删除
  #      logic-delete-value: 0
  #      logic-not-delete-value: 1
  #      # 数据库类型
  #      db-type: mysql
  #    banner: false
  #  # mybatis原生配置
  #  configuration:
  #    map-underscore-to-camel-case: true
  #    cache-enabled: false
  #    call-setters-on-nulls: true
  #    jdbc-type-for-null: 'null'
  #    type-handlers-package: com.platform.dts.core.handler

  # 配置mybatis-plus打印sql日志

##flinkx-job, access token
studio:
  job:
    accessToken:
    #i18n (default empty as chinese, "en" as english)
    i18n:
    ## triggerpool max size
    triggerpool:
      fast:
        max: 200
      slow:
        max: 100
      ### log retention days
    logretentiondays: 30
  executor:
    flinkxHome: /flinkx/flinkx.py
    flinkxjsonPath: /flinkx/job/
    flinkxlogHome: /flinkx/job-log
    dataxHome: /datax/datax.py
    dataxjsonPath: /datax/job/
    dataxlogHome: /datax/job-log
datasource:
  aes:
    key: AD42F6697B035B75


# 登录相关配置
login:
  #  是否限制单用户登录
  single-login: false
  # Redis用户登录缓存配置
  user-cache:
    # 存活时间/秒
    idle-time: 7200
  #  验证码
  login-code:
    #  验证码类型配置 查看 LoginProperties 类
    code-type: arithmetic
    #  登录图形验证码有效时间/分钟
    expiration: 2
    #  验证码高度
    width: 111
    #  验证码宽度
    height: 36
    # 内容长度
    length: 2
    # 字体名称，为空则使用默认字体
    font-name:
    # 字体大小
    font-size: 25

#jwt
jwt:
  header: Authorization
  # 令牌前缀
  token-start-with: Bearer
  # 必须使用最少88位的Base64对该令牌进行编码
  base64-secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI=
  # 令牌过期时间 此处单位/毫秒 ，默认4小时，可在此网站生成 https://www.convertworld.com/zh-hans/time/milliseconds.html
  token-validity-in-seconds: 14400000
  # 在线用户key
  online-key: online-token-
  # 验证码
  code-key: code-key-
  # token 续期检查时间范围（默认30分钟，单位毫秒），在token即将过期的一段时间内用户操作了，则给用户的token续期
  detect: 1800000
  # 续期时间范围，默认1小时，单位毫秒
  renew: 3600000

#是否允许生成代码，生产环境设置为false
generator:
  enabled: true

#是否开启 swagger-ui
swagger:
  enabled: true

# IP 本地解析
ip:
  local-parsing: true

# 文件存储路径
file:
  mac:
    path: ~/file/
    avatar: ~/avatar/
  linux:
    path: /home/studio/file/
    avatar: /home/studio/avatar/
  windows:
    path: C:\studio\file\
    avatar: C:\studio\avatar\
  # 文件大小 /M
  maxSize: 100
  avatarMaxSize: 5
